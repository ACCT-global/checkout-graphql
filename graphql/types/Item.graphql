scalar InputValues
# productCategoriesObject is a Record<string, string>, in the following format:
# { '<categoryNumber>': '<categoryName>' }
scalar productCategoriesObject

type Item {
  additionalInfo: ItemAdditionalInfo
  assemblyOptions: AssemblyOptionItem
  availability: String
  detailUrl: String
  id: ID!
  imageUrls: ImageUrls
  listPrice: Float
  measurementUnit: String
  name: String
  parentAssemblyBinding: String
  options: [AssemblyOptionType]
  price: Float
  productCategories: productCategoriesObject
  productCategoryIds: String
  productId: String!
  productRefId: String
  quantity: Float!
  seller: String!
  sellingPrice: Float
  sellingPriceWithAssemblies: Float
  skuName: String
  skuSpecifications: [SKUSpecification!]!
  uniqueId: String!
  unitMultiplier: Float
  refId: String
}

type ImageUrls {
  at1x: String!
  at2x: String!
  at3x: String!
}

type AssemblyOptionItem {
  added: [AddedOptionItem]!
  removed: [RemovedOptionItem]!
  parentPrice: Float
}

type RemovedOptionItem {
  initialQuantity: Int
  removedQuantity: Int
  name: String
}

type AddedOptionItem {
  item: Item
  compositionItem: CompositionItem
  normalizedQuantity: Int
  choiceType: String
  extraQuantity: Int
}

type CompositionItem {
  id: ID
  minQuantity: Int
  maxQuantity: Int
  initialQuantity: Int
  priceTable: String
  seller: String
}

type ItemAdditionalInfo {
  brandName: String
}

type SKUSpecification {
  fieldName: String @translatableV2
  fieldValues: [String]! @translatableV2
}

type AssemblyOptionType {
  assemblyId: String!
  id: ID
  quantity: Int
  seller: String
  inputValues: InputValues
  options: [AssemblyOptionType!]
}

input ItemInput {
  id: Int
  index: Int
  quantity: Float
  seller: ID
  uniqueId: String
  inputValues: InputValues
  options: [AssemblyOptionInput]
}

input AssemblyOptionInput {
  assemblyId: String!
  id: ID
  quantity: Int
  seller: String
  inputValues: InputValues
  options: [AssemblyOptionInput!]
}
